{
  "openapi":"3.1.0",
  "info":{
    "title":"HLR/HSS Connector Microservice",
    "description":"Processes PortaBilling ESPF events (post-NSPS) and syncs with HLR/HSS Core system",
    "version":"1.0.0"
  },
  "paths":{
    "/health":{
      "get":{
        "summary":"Health Check",
        "description":"Health check endpoint",
        "operationId":"health_check_health_get",
        "responses":{
          "200":{
            "description":"Successful Response",
            "content":{
              "application/json":{
                "schema":{
                  
                }
              }
            }
          }
        }
      }
    },
    "/process-event":{
      "post":{
        "summary":"Process Event",
        "description":"Process incoming PortaBilling ESPF event that has already been processed by NSPS",
        "operationId":"process_event_process_event_post",
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/Event"
              }
            }
          },
          "required":true
        },
        "responses":{
          "202":{
            "description":"Event accepted for processing",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/EventResponse"
                },
                "example":{
                  "message":"Event accepted for processing"
                }
              }
            }
          },
          "401":{
            "description":"Unauthorized",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                },
                "example":{
                  "message":"Invalid access token",
                  "error":"Unauthorized",
                  "type":"authentication_error"
                }
              }
            }
          },
          "404":{
            "description":"Not found",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                },
                "example":{
                  "message":"Resource not found",
                  "error":"Not found",
                  "type":"validation_error"
                }
              }
            }
          },
          "405":{
            "description":"Method not allowed",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                },
                "example":{
                  "message":"Method not allowed",
                  "error":"Method not allowed",
                  "type":"validation_error"
                }
              }
            }
          },
          "422":{
            "description":"Validation failed",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                },
                "example":{
                  "message":"Validation failed",
                  "error":"Validation failed",
                  "type":"validation_error"
                }
              }
            }
          },
          "429":{
            "description":"Too many requests",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                },
                "example":{
                  "message":"Too many requests to API Core",
                  "error":"Rate limit exceeded",
                  "type":"rate_limit_error"
                }
              }
            }
          },
          "500":{
            "description":"Internal server error",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                },
                "example":{
                  "message":"API Core HTTP error",
                  "error":"Internal server error",
                  "type":"service_error"
                }
              }
            }
          },
          "503":{
            "description":"Service unavailable",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ErrorResponse"
                },
                "example":{
                  "message":"Core service is not available",
                  "error":"Connection timeout",
                  "type":"connection_error"
                }
              }
            }
          }
        },
        "security":[
          {
            "HTTPBearer":[
              
            ]
          }
        ]
      }
    }
  },
  "components":{
    "schemas":{
      "AccessPolicyAttribute":{
        "properties":{
          "group_name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Group Name",
            "description":"The name used to group service policy attributes",
            "examples":[
              "lte.wtl"
            ]
          },
          "name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Name",
            "description":"The name of the service policy attribute",
            "examples":[
              "cs_profile"
            ]
          },
          "value":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Value",
            "description":"Service policy attribute value, comma-separated if multiple values",
            "examples":[
              "cs-policy"
            ]
          }
        },
        "type":"object",
        "title":"AccessPolicyAttribute",
        "description":"Access policy attribute model"
      },
      "AccessPolicyInfo":{
        "properties":{
          "i_access_policy":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Access Policy ID",
            "description":"The unique ID of the Service Policy",
            "examples":[
              179
            ]
          },
          "name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Name",
            "description":"The name of the Access Policy",
            "examples":[
              "WTL integration"
            ]
          },
          "attributes":{
            "items":{
              "$ref":"#/components/schemas/AccessPolicyAttribute"
            },
            "type":"array",
            "title":"Attributes",
            "description":"The list of related service policy attribute values"
          }
        },
        "type":"object",
        "title":"AccessPolicyInfo",
        "description":"Access policy information model"
      },
      "AccountInfo":{
        "properties":{
          "bill_status":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Billing status",
            "description":"The billing status of the account.\u003Cbr\u003E Possible values: \"open\" - the account is open;\u003Cbr\u003E \"suspended\" - the account is suspended. This status is available for debit accounts and can be set only automatically (by subscriptions assigned to the account);\u003Cbr\u003E \"inactive\" - the account is inactive. This status can be set only during account creation, manually or using the Account Generator;\u003Cbr\u003E \"terminated\" - the account is terminated. This status can be set only via the terminate_account method.",
            "examples":[
              "open"
            ]
          },
          "billing_model":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Account type",
            "description":"The account type.\u003Cbr\u003E An account can be a debit, credit, beneficiary, or voucher type.\u003Cbr\u003E A debit type is usually associated with prepaid cards and the account balance will show the available funds.\u003Cbr\u003E A credit account is invoiced for incurred costs.\u003Cbr\u003E A beneficiary account has a service configuration that only uses the balance, products, and quotas of a sponsor account.\u003Cbr\u003E A voucher-type account is used to refill debit or credit accounts; the balance of the voucher account is transferred to the main account.\u003Cbr\u003E Possible values: \"debit_account\", \"recharge_voucher\", \"credit_account\", \"alias\", \"beneficiary\".",
            "examples":[
              "credit_account"
            ]
          },
          "blocked":{
            "anyOf":[
              {
                "type":"boolean"
              },
              {
                "type":"null"
              }
            ],
            "title":"Blocked",
            "description":"Indicates whether account's calls and access to the self-care interface is blocked",
            "examples":[
              false
            ]
          },
          "email":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Email",
            "description":"The email address associated with the account",
            "examples":[
              "info@portaone.com"
            ]
          },
          "firstname":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"First name",
            "description":"The account owner's first name",
            "examples":[
              "John"
            ]
          },
          "i_account":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Account unique ID",
            "description":"The unique ID of the account",
            "examples":[
              277147
            ]
          },
          "i_customer":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Customer ID",
            "description":"The ID of the customer record to which the account belongs",
            "examples":[
              6392
            ]
          },
          "i_master_account":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Master Account ID",
            "description":"The ID of the parent account",
            "examples":[
              null
            ]
          },
          "i_product":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Product ID",
            "description":"The ID for the account's product",
            "examples":[
              3774
            ]
          },
          "i_vd_plan":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"VolumeDiscount Plan ID",
            "description":"The unique ID of the bundle assigned to the account individually",
            "examples":[
              1591
            ]
          },
          "id":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Id",
            "description":"The unique ID (PIN) of the account on the interface",
            "examples":[
              "380661310764@msisdn"
            ]
          },
          "lastname":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Last name",
            "description":"The account owner's last name",
            "examples":[
              "Doe"
            ]
          },
          "phone1":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Phone1",
            "description":"The main phone number",
            "examples":[
              "380661310764"
            ]
          },
          "product_name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Product Name",
            "description":"The name of the account's product",
            "examples":[
              "Pay as you go"
            ]
          },
          "status":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Status",
            "description":"The current status of the account, based on its own status, the customer's status and other factors (like 'expiration time', 'activation time' and so on).\u003Cbr\u003E Possible values:\u003Cbr\u003E\"active\" - the account is active;\u003Cbr\u003E\"customer_exported\" - the account's customer is exported;\u003Cbr\u003E\"expired\" - the account expired;\u003Cbr\u003E\"quarantine\" - after being screened, the account was unable to supply valid credentials;\u003Cbr\u003E\"screening\" - the suspicious activity was detected for the account;\u003Cbr\u003E\"closed\" - the account is closed;\u003Cbr\u003E\"inactive\" - the account is inactive;\u003Cbr\u003E\"suspended\" - the account is suspended (applicable to debit accounts only);\u003Cbr\u003E\"customer_suspended\" - the account's customer is suspended;\u003Cbr\u003E\"customer_limited\" - services are limited for the account's customer;\u003Cbr\u003E\"customer_provisionally_terminated\" - the account's customer is provisionally terminated;\u003Cbr\u003E\"blocked\" - the account is blocked;\u003Cbr\u003E\"customer_blocked\" - the account's customer is blocked;\u003Cbr\u003E\"not_yet_active\" - the account's activation date has not yet come;\u003Cbr\u003E\"credit_exceeded\" - the account's balance is above the individual credit limit;\u003Cbr\u003E\"overdraft\" - the account's balance is overdrawn (applies to debit accounts only);\u003Cbr\u003E\"customer_has_no_available_funds\" - the account's customer funds are depleted;\u003Cbr\u003E\"customer_credit_exceed\" - the account's customer balance is above the credit limit;\u003Cbr\u003E\"zero_balance\" - the account's funds are depleted (applicable to debit accounts only);\u003Cbr\u003E\"customer_suspension_delayed\" - the account's customer suspension is lifted;\u003Cbr\u003E\"customer_limiting_delayed\" - the account's customer limitation is delayed;\u003Cbr\u003E\"frozen\" - the account's auto-payment is suspended due to repeated errors.",
            "examples":[
              "active"
            ]
          },
          "time_zone_name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Time Zone Name",
            "description":"The name of the account's time zone. The UI equivalent of this field is the 'Time zone'. Examples: \"Europe/Prague\", \"America/Vancouver\", etc.",
            "examples":[
              "Europe/Kiev"
            ]
          },
          "zip":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Zip code",
            "description":"The postal (zip) code",
            "examples":[
              "40004"
            ]
          },
          "assigned_addons":{
            "items":{
              "$ref":"#/components/schemas/AddOnProduct"
            },
            "type":"array",
            "title":"Assigned Addons",
            "description":"The list of the account's add-on products"
          },
          "service_features":{
            "items":{
              "$ref":"#/components/schemas/ServiceFeature"
            },
            "type":"array",
            "title":"Service Features",
            "description":"The list of the service features"
          }
        },
        "type":"object",
        "title":"AccountInfo",
        "description":"Account information model"
      },
      "AddOnProduct":{
        "properties":{
          "addon_effective_from":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Addon Effective From",
            "description":"ISO datetime string - when the add-on product is activated",
            "examples":[
              "2025-05-16 12:59:46"
            ]
          },
          "addon_effective_to":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Addon Effective To",
            "description":"ISO datetime string - when the add-on product expires",
            "examples":[
              "2025-06-16 12:59:46"
            ]
          },
          "addon_priority":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Addon Priority",
            "description":"Priority of the addon: 0=main product, 10=low, 15=medium low, 20=medium, 25=medium high, 30=high",
            "examples":[
              10
            ]
          },
          "description":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Description",
            "description":"The internal product description",
            "examples":[
              null
            ]
          },
          "i_product":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Product ID",
            "description":"The unique ID of the product",
            "examples":[
              3775
            ]
          },
          "i_product_group":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Product Group ID",
            "description":"The unique ID of the product group to which the product belongs",
            "examples":[
              null
            ]
          },
          "i_vd_plan":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"VolumeDiscount Plan ID",
            "description":"The unique ID of the bundle assigned to the product",
            "examples":[
              1591
            ]
          },
          "name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Name",
            "description":"The product name",
            "examples":[
              "Youtube UHD"
            ]
          }
        },
        "type":"object",
        "title":"AddOnProduct",
        "description":"Addon product model"
      },
      "CardInfo":{
        "properties":{
          "i_account":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"Account unique ID",
            "description":"The unique ID of the account to which the SIM card belongs",
            "examples":[
              277147
            ]
          },
          "i_sim_card":{
            "anyOf":[
              {
                "type":"integer"
              },
              {
                "type":"null"
              }
            ],
            "title":"SIM Card ID",
            "description":"The unique ID of the SIM card",
            "examples":[
              3793
            ]
          },
          "iccid":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"ICCID",
            "description":"The Integrated Circuit Card ID. ICCIDs are stored in the SIM cards. Possible data format: a unique 18 to 22 digit code that includes the SIM card country, home network, and identification number.",
            "examples":[
              "89014103211118510720"
            ]
          },
          "imsi":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"IMSI",
            "description":"The unique International Mobile Subscriber Identity of the SIM card. Possible data format: a string of 6 to 15 digits.",
            "examples":[
              "001010000020349"
            ]
          },
          "msisdn":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"MSISDN",
            "description":"The Mobile Subscriber Integrated Services Digital Number, mobile number of the SIM card.",
            "examples":[
              "380661310764"
            ]
          },
          "status":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Status",
            "description":"The status of the SIM card",
            "examples":[
              "active"
            ]
          }
        },
        "type":"object",
        "title":"CardInfo",
        "description":"SIM card information model"
      },
      "ESPFEvent":{
        "properties":{
          "event_type":{
            "type":"string",
            "title":"Event Type",
            "description":"The type of the event",
            "examples":[
              "SIM/Updated"
            ]
          },
          "variables":{
            "type":"object",
            "title":"Variables",
            "description":"All event variables passed as-is from original event"
          }
        },
        "type":"object",
        "required":[
          "event_type"
        ],
        "title":"ESPFEvent",
        "description":"Model representing incoming ESPF event"
      },
      "ErrorResponse":{
        "properties":{
          "message":{
            "type":"string",
            "title":"Message"
          },
          "error":{
            "type":"string",
            "title":"Error"
          },
          "type":{
            "$ref":"#/components/schemas/ErrorType"
          }
        },
        "type":"object",
        "required":[
          "message",
          "error",
          "type"
        ],
        "title":"ErrorResponse",
        "description":"Standard error response model"
      },
      "ErrorType":{
        "type":"string",
        "enum":[
          "validation_error",
          "authentication_error",
          "service_error",
          "connection_error",
          "rate_limit_error",
          "internal_error"
        ],
        "title":"ErrorType",
        "description":"Error types for the application"
      },
      "Event":{
        "properties":{
          "event_id":{
            "type":"string",
            "title":"Event Id",
            "description":"Unique identifier of the event",
            "examples":[
              "a3623086-24c2-47fb-a17f-929d9e542ed2"
            ]
          },
          "data":{
            "allOf":[
              {
                "$ref":"#/components/schemas/ESPFEvent"
              }
            ],
            "description":"Event data containing type and variables"
          },
          "handler_id":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Handler Id",
            "description":"ID of the handler processing this event",
            "examples":[
              "wtl"
            ]
          },
          "created_at":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Created At",
            "description":"When the event was created (ISO datetime string)",
            "examples":[
              "2025-06-09T17:44:21.207629+00:00"
            ]
          },
          "updated_at":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Updated At",
            "description":"When the event was last updated (ISO datetime string)",
            "examples":[
              "2025-06-09T17:44:22.125109+00:00"
            ]
          },
          "status":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Status",
            "description":"Current status of the event",
            "examples":[
              "queued"
            ]
          },
          "pb_data":{
            "anyOf":[
              {
                "$ref":"#/components/schemas/PBData"
              },
              {
                "type":"null"
              }
            ],
            "description":"Simplified PortaBilling data with only essential fields"
          }
        },
        "type":"object",
        "required":[
          "event_id",
          "data"
        ],
        "title":"Event",
        "description":"Main event model"
      },
      "EventResponse":{
        "properties":{
          "message":{
            "type":"string",
            "title":"Message",
            "default":"Event accepted for processing"
          }
        },
        "type":"object",
        "title":"EventResponse",
        "description":"Event processing response"
      },
      "PBData":{
        "properties":{
          "account_info":{
            "anyOf":[
              {
                "$ref":"#/components/schemas/AccountInfo"
              },
              {
                "type":"null"
              }
            ],
            "description":"Account information from PortaBilling"
          },
          "sim_info":{
            "anyOf":[
              {
                "$ref":"#/components/schemas/CardInfo"
              },
              {
                "type":"null"
              }
            ],
            "description":"SIM card information from PortaBilling"
          },
          "access_policy_info":{
            "anyOf":[
              {
                "$ref":"#/components/schemas/AccessPolicyInfo"
              },
              {
                "type":"null"
              }
            ],
            "description":"Access policy information from PortaBilling"
          }
        },
        "type":"object",
        "title":"PBData",
        "description":"PortaBilling data for event enrichment."
      },
      "ServiceFeature":{
        "properties":{
          "name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Name",
            "description":"The service feature name",
            "examples":[
              "netaccess_policy"
            ]
          },
          "effective_flag_value":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Effective Flag Value",
            "description":"The actual service feature flag value",
            "examples":[
              "Y"
            ]
          },
          "attributes":{
            "items":{
              "$ref":"#/components/schemas/ServiceFeatureAttribute"
            },
            "type":"array",
            "title":"Attributes",
            "description":"The list of service feature attributes"
          }
        },
        "type":"object",
        "title":"ServiceFeature",
        "description":"Service feature model"
      },
      "ServiceFeatureAttribute":{
        "properties":{
          "name":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Name",
            "description":"The service feature attribute internal name",
            "examples":[
              "access_policy"
            ]
          },
          "effective_value":{
            "anyOf":[
              {
                "type":"string"
              },
              {
                "type":"null"
              }
            ],
            "title":"Effective Value",
            "description":"Service feature attribute value, comma-separated if multiple values",
            "examples":[
              "149"
            ]
          }
        },
        "type":"object",
        "title":"ServiceFeatureAttribute",
        "description":"Service feature attribute model"
      }
    },
    "securitySchemes":{
      "HTTPBearer":{
        "type":"http",
        "scheme":"bearer"
      }
    }
  }
}
